name: build & deploy services

concurrency: production

on:
  push:
    branches:
      - main

env:
  REGISTRY: 'ghcr.io'
  IMAGE: ${{ github.repository }}
  TAG: 'latest'

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3

      - uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ env.TAG }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ env.TAG }}

  deploy:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    needs: build

    steps:
      - uses: actions/checkout@v3

      - uses: LuisEnMarroquin/setup-ssh-action@v2.0.0
        with:
          NAME: remote
          USER: ${{ secrets.SSH_USER }}
          ORIGIN: ${{ secrets.SSH_ORIGIN }}
          SSHKEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - run: echo $COMPOSE_ENV_FILE | base64 -d > .env
        env:
          COMPOSE_ENV_FILE: ${{ secrets.PRODUCTION_COMPOSE_ENV }}

      - run: |
          docker context create --docker host=ssh://remote remote
          docker context use remote
          docker compose up -f docker-compose.production.yml --env-file .env -d --pull=always
